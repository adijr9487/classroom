{"version":3,"sources":["components/Navbar2.js","components/AClass.js","components/Classwork.js","components/Members.js","context/userContext.js","components/Navbar.js","components/ClassCard.js","components/HomePage.js","components/SignUp.js","components/Signin.js","components/CreateAssignment.js","components/SubmitAssignment.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar2","props","Navbar","collapseOnSelect","expand","bg","className","fixed","Brand","href","Toggle","style","fontSize","Collapse","id","Nav","marginLeft","cursor","to","A_Class","useState","ClassCode","admin","classname","link","details","setDetails","setExpand","announce","setAnnounce","error","setError","posts","setPosts","params","useParams","fetchCls","a","fetch","method","headers","Accept","withCredentials","credentials","res","json","console","log","fetchPosts","useEffect","then","class","_id","subjectCode","name","title","submitPost","body","JSON","stringify","content","success","window","location","reload","Container","Row","Col","Jumbotron","Form","Group","Control","as","rows","placeholder","borderRadius","value","onChange","e","target","Button","variant","onClick","map","p","index","Card","Body","Title","author","updatedAt","split","Text","Classwork","assigns","setAssigns","email","username","role","user","setUser","fetchAssigns","document","cookie","forEach","cook","decodeURI","c","trim","temp","parse","decodeURIComponent","marginRight","color","ListGroup","length","ass","border","textDecoration","Item","due","Members","setAdmin","students","setStudents","fetchClass","textAlign","paddingLeft","stud","UserContext","createContext","UserProvider","Provider","children","Navbar1","modalShow","setModalShow","modalShow1","setModalShow1","useHistory","logout","MyVerticallyCenteredModal","code","setCode","submit","onHide","Modal","size","centered","Header","type","Footer","MyModal","setName","subjectcode","setSubjectcode","setLink","books","setBooks","show","Class_Card","renderTooltip","Tooltip","width","Img","src","process","alt","pathname","state","OverlayTrigger","placement","delay","hide","overlay","unenroll","HomePage","classes","setClasses","hist","fetchClasses","data","push","prev","filter","cls","val","SignUp","setEmail","password","setPassword","c_password","setC_Password","setRole","err","setErr","useContext","onChangeHandler","fetchClassPosts","md","xl","Label","column","xs","autoComplete","Signin","sm","CreateAssignment","form","setForm","dealine","setDeadline","setTitle","sendQuestionData","event","preventDefault","persist","item","i","errors","outline","padding","handleRemoveField","Points","Question","Option1","Option2","Option3","Option4","Correct","Option","inputState","someEmpty","some","allPrev","prevIsValid","ele","tempQuestion","question","options","correct","points","questions","SubmitAssignment","answer","setAnswer","setQuestions","submissions","assign","setAssign","submitHandler","for","time","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.d7a7e4ed.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Navbar,Nav} from 'react-bootstrap'\r\n\r\nconst Navbar2 = (props) => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"sm\" bg=\"light\" className=\"nav\" fixed=\"top\" >\r\n            <Navbar.Brand href=\"/\">Classroom</Navbar.Brand>\r\n            <Navbar.Toggle style={{fontSize:\"15px\"}} aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav style={{marginLeft:\"auto\"}}>\r\n                    <NavLink className=\"nav-link\" style={{cursor:\"pointer\"}} to={`/class/${props.id}/stream`}>Stream</NavLink>\r\n                    <NavLink className=\"nav-link\" style={{cursor:\"pointer\"}} to={`/class/${props.id}/classwork`}>Classwork</NavLink>\r\n                    <NavLink className=\"nav-link\" style={{cursor:\"pointer\"}} to={`/class/${props.id}/people`}>People</NavLink>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navbar2\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Container, Row, Jumbotron, Card,Form, Button } from 'react-bootstrap'\r\nimport Navbar2 from './Navbar2'\r\nimport {Link, useParams} from 'react-router-dom'\r\n\r\nconst A_Class = () => {\r\n    const [details, setDetails] = useState({\r\n        id:'',\r\n        ClassCode: '',\r\n        admin: '',\r\n        classname: '',\r\n        link:''\r\n    });\r\n    const [expand, setExpand] = useState(false);\r\n    const [announce, setAnnounce] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    const params = useParams();\r\n\r\n        const fetchCls = async () => {\r\n            try {\r\n                let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${params.id}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type':'application/json',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    withCredentials: true, \r\n                    credentials: 'include',\r\n                });\r\n                res = await res.json();\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                }\r\n                else return res;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        const fetchPosts = async () => {\r\n            try {\r\n                let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${params.id}/posts`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type':'application/json',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    withCredentials: true, \r\n                    credentials: 'include',\r\n                });\r\n                res = await res.json();\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                }\r\n                else return res;\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n    };\r\n    \r\n    useEffect(() => {\r\n\r\n        fetchPosts().then(res => {\r\n            if(res.posts)\r\n                setPosts(res.posts)\r\n        });\r\n\r\n        fetchCls().then(res => {\r\n            setDetails(() => {\r\n                return {\r\n                    id:res.class._id,\r\n                    ClassCode: res.class.subjectCode,\r\n                    admin: res.class.admin.name,\r\n                    classname: res.class.title,\r\n                    link:res.class.link\r\n                }\r\n            });\r\n        })\r\n    }, [])\r\n\r\n    const submitPost = async () => {\r\n        try {\r\n            let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${details.id}/posts`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({title:'',content: announce}),\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                    Accept: \"application/json\",\r\n                },\r\n                withCredentials: true,\r\n                credentials: 'include'\r\n            })\r\n            res = await res.json();\r\n            if (res.error) {\r\n                setError(res.error);\r\n            }\r\n            else {\r\n                setError(res.success);\r\n                window.location.reload()\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar2 id={details.id}/>\r\n            <Container className=\"mt-5\">\r\n                <Row >\r\n                    <Col>\r\n                        <div className=\"d-md-flex align-items-center justify-content-center\">\r\n                            <Jumbotron className=\"jumbo p-5 mt-4 col-md-9\">\r\n                                <h1>{details.classname}</h1>\r\n                                <p>{details.ClassCode}</p>\r\n                                <p>Meet Link: <a href={details.link}>{details.link}</a> </p>\r\n                            </Jumbotron>\r\n                        </div>\r\n                        <div className=\"d-md-flex align-items-center justify-content-center\">\r\n                            <Jumbotron className=\"mt-4 announce col-sm-12 col-md-7\" style={{cursor:\"pointer\"}}>\r\n                                {expand ? \r\n                                    <div className=\"p-4\">\r\n                                        <Form>\r\n                                            <Form.Group>\r\n                                                <Form.Control as=\"textarea\" rows={1} placeholder=\"Announce something to the class\" style={{borderRadius:\"20px\"}} name='announce' value={announce} onChange={(e)=>{setAnnounce(e.target.value)}} />\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                        <div className=\"mt-3 btns\">\r\n                                            <Button variant=\"outline-danger\" className=\"btn-sm\" onClick={() => { setExpand(false) }} >Cancel</Button>\r\n                                            <p> {error} </p>\r\n                                            <Button variant=\"outline-success\" className=\"btn-sm\" onClick={submitPost}>Submit</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <div className=\"p-4\" onClick={()=>{setExpand(true)}}>Announce something to the class</div>\r\n                                    \r\n                                }\r\n                            </Jumbotron>\r\n                        </div>\r\n                        {posts.map((p, index) => {\r\n                                return (\r\n                                <div key={index} className=\"d-md-flex align-items-center justify-content-center\">\r\n                                    <Card className=\"mt-4 announcement col-sm-12 col-md-7\">\r\n                                        <Card.Body className=\"p-4\">\r\n                                            <Card.Title>\r\n                                                <p> {p.author.name} </p>\r\n                                                <p> {(p.updatedAt.split(\"T\")[0])} </p>\r\n                                            </Card.Title>\r\n                                            <Card.Text>\r\n                                                {p.content}\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                                );\r\n                            })}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default A_Class\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, ListGroup, Button } from 'react-bootstrap'\r\nimport Navbar2 from './Navbar2'\r\nimport { MdAssignment, MdAssignmentInd,MdCreateNewFolder } from \"react-icons/md\";\r\nimport { useParams } from 'react-router'\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nconst Classwork = () => {\r\n    const [assigns, setAssigns] = useState([]);\r\n    const params = useParams();\r\n    const [user, setUser] = useState({\r\n        _id: '',\r\n        email: '',\r\n        username: '',\r\n        role:''\r\n    });\r\n\r\n\r\n\r\n    const fetchAssigns = async () => {\r\n        try {\r\n            let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${params.id}/assign`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                    Accept: \"application/json\",\r\n                },\r\n                withCredentials: true, \r\n                credentials: 'include',\r\n            });\r\n            res = await res.json();\r\n            if (res.assigns) return res;\r\n            throw res.error\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const renderEmpty = () => {\r\n        return (\r\n            <div>\r\n                <p> No assignments available </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cookies = document.cookie.split(';');\r\n        cookies.forEach(cookie => {\r\n            let cook = decodeURI(cookie);\r\n            cook = cook.split('=').map(c => c.trim());\r\n            if (cook[0] === 'user') {\r\n                const temp = JSON.parse(decodeURIComponent(cook[1]));\r\n                setUser(() => {\r\n                    return {\r\n                        _id: temp._id,\r\n                        email: temp.email,\r\n                        username: temp.username,\r\n                        role:temp.role\r\n                    }\r\n                });\r\n            }\r\n        })\r\n\r\n        fetchAssigns().then(res => {\r\n            setAssigns(res.assigns);\r\n        });\r\n\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        console.log(user)\r\n\r\n    }, [user])\r\n\r\n    return (\r\n        <>\r\n            <Navbar2  id={params.id} />\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"mt-5\">\r\n                        <h3><MdAssignmentInd style={{fontSize:\"30px\", marginRight:\"10px\"}} />View Your Work</h3>\r\n                        {user.role === \"Teacher\" && <NavLink to={`/class/${params.id}/assign/create`} className=\"nav-link\" style={{color:\"black\"}}><MdCreateNewFolder className=\"create\"/></NavLink>}\r\n                        <div className=\"d-md-flex justify-content-center align-items-center\">\r\n                            <ListGroup variant=\"flush\"  className=\"mt-5 col-md-7\">\r\n                                {assigns.length === 0 ? renderEmpty() : null}\r\n                                {assigns.map((ass, index) =>\r\n                                    <NavLink key={index} to={`/assign/${ass._id}/submit`} className=\"mb-3\" style={{ color: \"black\", border: \"none\", textDecoration: \"none\" }}>\r\n                                        <ListGroup.Item>\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <div><MdAssignment style={{fontSize:\"20px\", marginRight:\"10px\"}}/> {ass.title}</div>\r\n                                                <div>{ass.due}</div>\r\n                                            </div>\r\n                                        </ListGroup.Item>\r\n                                    </NavLink>\r\n                                )}\r\n                            </ListGroup>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classwork\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Col, Container, Row, ListGroup } from 'react-bootstrap'\r\nimport Navbar2 from './Navbar2'\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport { useParams } from 'react-router'\r\n\r\nconst Members = () => {\r\n    const params = useParams();\r\n    const [admin, setAdmin] = useState('');\r\n    const [students, setStudents] = useState([]);\r\n\r\n    const fetchClass = async () => {\r\n        try {\r\n            let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${params.id}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                    Accept: \"application/json\",\r\n                },\r\n                withCredentials: true, \r\n                credentials: 'include',\r\n            });\r\n            res = await res.json();\r\n            if (!res.error) return res;\r\n            throw res.error;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchClass().then(res => {\r\n            setAdmin(res.class.admin.name);\r\n            setStudents(res.class.students);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Navbar2  id={params.id}/>\r\n            <Container className=\"mt-5\">\r\n                <Row>\r\n                    <Col className=\"mt-5\">\r\n                        <div className=\"d-md-flex justify-content-center align-items-center\" style={{textAlign:\"left\"}}>\r\n                            <div className=\"col-md-7\">\r\n                                <h1 style={{paddingLeft:\"15px\"}}>Teachers</h1>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-md-flex justify-content-center align-items-center\" style={{textAlign:\"left\"}}>\r\n                            <ListGroup variant=\"flush\" className=\"col-md-7\">\r\n                                <ListGroup.Item className=\"mb-3\">\r\n                                    <div className=\"d-flex align-items-center\">\r\n                                        <FaUserCircle style={{fontSize:\"20px\", marginRight:\"10px\"}}/>\r\n                                        <div>{admin}</div>\r\n                                    </div>\r\n                                </ListGroup.Item>                            \r\n                            </ListGroup>\r\n                        </div>\r\n                        {/* ----------------Students------------- */}\r\n                        <div className=\"mt-4 mb-0 d-md-flex justify-content-center align-items-center\" style={{textAlign:\"left\"}}>\r\n                            <div className=\"col-md-7\">\r\n                                <h1 style={{paddingLeft:\"15px\"}}>Students</h1>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-md-flex justify-content-center align-items-center\"  style={{textAlign:\"left\"}}>\r\n                            <ListGroup variant=\"flush\" className=\"col-md-7\">\r\n                                {students.map((stud, index) => {\r\n                                    return (\r\n                                    <ListGroup.Item key={index} className=\"mb-3\">\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <FaUserCircle style={{fontSize:\"20px\", marginRight:\"10px\"}}/>\r\n                                            <div>{stud.user}</div>\r\n                                        </div>\r\n                                    </ListGroup.Item>\r\n                                    );\r\n                                })}\r\n                            </ListGroup>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Members\r\n","import React, { useState, createContext } from 'react'\r\n\r\nexport const UserContext = createContext()\r\n\r\nexport const UserProvider = (props) => {\r\n    const [user, setUser] = useState({\r\n        email: '',\r\n        username: '',\r\n        role: '',\r\n    });\r\n\r\n    return (\r\n        <UserContext.Provider value={[user, setUser]}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport {Navbar,Modal,Button, Form,Nav} from 'react-bootstrap'\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Navbar1 = () => {\r\n    const [modalShow, setModalShow] = useState(false);\r\n  const [modalShow1, setModalShow1] = useState(false);\r\n  const hist = useHistory();\r\n  const [user, setUser] = useState({\r\n        _id: '',\r\n        email: '',\r\n        username: '',\r\n        role:''\r\n  });\r\n  \r\n  useEffect(() => {\r\n    const cookies = document.cookie.split(';');\r\n        cookies.forEach(cookie => {\r\n            let cook = decodeURI(cookie);\r\n            cook = cook.split('=').map(c => c.trim());\r\n            if (cook[0] === 'user') {\r\n              const temp = JSON.parse(decodeURIComponent(cook[1]));\r\n              if(temp)\r\n                setUser(() => {\r\n                    return {\r\n                        _id: temp._id,\r\n                        email: temp.email,\r\n                        username: temp.username,\r\n                        role:temp.role\r\n                    }\r\n                });\r\n            }\r\n        })\r\n  }, [])\r\n\r\n  const logout = async () => {\r\n    try {\r\n      let res = await fetch('https://fliprclassroom.herokuapp.com/auth/logout', {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type':'application/json',\r\n            Accept: \"application/json\",\r\n        },\r\n        withCredentials: true, \r\n        credentials: 'include',\r\n    });\r\n      console.log(res);\r\n      res = await res.json();\r\n      console.log(res);\r\n      if (res.success) {\r\n        window.location.reload();\r\n      }\r\n      else throw res.error;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n  }, [user])\r\n\r\n    function MyVerticallyCenteredModal(props) {\r\n      const [code, setCode] = useState('');\r\n      const [error, setError] = useState('');\r\n\r\n      const submit = async () => {\r\n        let res = await fetch(`https://fliprclassroom.herokuapp.com/class/join/${code}`, {\r\n          method: 'PATCH', \r\n          headers: {\r\n            'Content-Type':'application/json',\r\n            Accept: \"application/json\",\r\n          },\r\n          withCredentials: true, \r\n          credentials: 'include'\r\n      })\r\n        res = await res.json();\r\n        if (res.error) {\r\n          setError(res.error);\r\n        }\r\n        else {\r\n          props.onHide();\r\n          window.location.reload();\r\n        }\r\n      }\r\n\r\n        return (\r\n          <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Class Code\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <p>\r\n                Enter the class code.\r\n              </p>\r\n              <Form>\r\n                <Form.Group>\r\n                    <Form.Control type=\"text\" name=\"code\" id=\"code\" value={code} onChange={(e) => setCode(e.target.value)} placeholder=\"Class Code\" />\r\n                </Form.Group>\r\n            </Form>\r\n            </Modal.Body>\r\n            <p>{error}</p>\r\n            <Modal.Footer>\r\n              <Button variant=\"outline-danger\" onClick={props.onHide}>Close</Button>\r\n              <Button variant=\"outline-success\" onClick={submit}>Submit</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        );\r\n    }\r\n    \r\n    function MyModal(props) {\r\n        const [name,setName] = useState('');\r\n        const [subjectcode,setSubjectcode] = useState('');\r\n        const [link,setLink] = useState('');\r\n      const [books, setBooks] = useState('');\r\n      const [error, setError] = useState('');\r\n      \r\n      const submit = async () => {\r\n        let res = await fetch('https://fliprclassroom.herokuapp.com/class', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            title: name,\r\n            subjectCode: subjectcode,\r\n            books: books.split(','),\r\n            link: link,\r\n          }),\r\n          headers: {\r\n            'Content-Type':'application/json',\r\n            Accept: \"application/json\",\r\n          },\r\n          withCredentials: true,\r\n          credentials: 'include'\r\n        })\r\n\r\n        res = await res.json();\r\n        if (res.error) {\r\n          setError(res.error)\r\n        }\r\n        else {\r\n          props.onHide();\r\n          window.location.reload();\r\n        }\r\n      }\r\n\r\n        return (\r\n          <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Create Class\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control type=\"text\" name=\"name\" id=\"name\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Class Name (required)\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control type=\"text\" name=\"subjectcode\" id=\"subjectcode\" value={subjectcode} onChange={(e) => setSubjectcode(e.target.value)} placeholder=\"Subject Code\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control type=\"text\" name=\"link\" id=\"link\" value={link} onChange={(e) => setLink(e.target.value)} placeholder=\"Link to the Video room\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Control type=\"text\" name=\"books\" id=\"books\" value={books} onChange={(e) => setBooks(e.target.value)} placeholder=\"Recommended Books\" />\r\n                </Form.Group>\r\n            </Form>\r\n            </Modal.Body>\r\n            <p> {error} </p>\r\n            <Modal.Footer>\r\n              <Button variant=\"outline-danger\" onClick={props.onHide}>Close</Button>\r\n              <Button variant=\"outline-success\" onClick={submit}>Submit</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" className=\"nav\" fixed=\"top\">\r\n            <NavLink to=\"/\" className=\"nav-link\" style={{color:\"black\", fontSize:\"20px\"}}>Classroom</NavLink>\r\n            <Nav>\r\n                <button className=\"navbtn\" onClick={() => { user.role === 'Student' ? setModalShow(true) : setModalShow1(true) }}><AiOutlinePlus style={{ fontSize: \"20px\" }} /></button>\r\n                <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} />\r\n                <MyModal show={modalShow1} onHide={() => setModalShow1(false)} />\r\n                \r\n          {user._id ? <button className=\"btn btn-danger\" onClick={()=>{logout()}} style={{cursor:\"pointer\"}}>Logout</button> : <NavLink className=\"nav-link\" style={{cursor:\"pointer\"}} to=\"/signin\">Login</NavLink>}\r\n                \r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Navbar1\r\n","import React from 'react'\r\nimport { Card, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport { MdExitToApp } from \"react-icons/md\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom'\r\n// MdExitToApp\r\n\r\nconst Class_Card = (props) => {\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Unenroll\r\n        </Tooltip>\r\n    );\r\n\r\n    const renderUnenroll = () => {\r\n        return (\r\n            <Card.Footer style={{textAlign:'center'}}>\r\n                            <OverlayTrigger\r\n                                placement=\"right\"\r\n                                delay={{ show: 250, hide: 400 }}\r\n                            overlay={renderTooltip}\r\n                            >\r\n                                <MdExitToApp onClick={() => {props.unenroll(props.id)}} className=\"exit\"/>\r\n                            </OverlayTrigger>\r\n                        </Card.Footer>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-4 center\">\r\n            <Card style={{ width: '18rem', color: \"black\" }} className=\"card1\">    \r\n                        <Card.Img variant=\"top\" src={`${process.env.PUBLIC_URL}/images/book1.jpg`} alt=\"image\" />\r\n                        <Link to={{\r\n                            pathname: `/class/${props.id}/stream`,\r\n                            state: {\r\n                                details: {\r\n                                    id:props.id,\r\n                                    ClassCode: props.ClassCode,\r\n                                    admin: props.admin,\r\n                                    classname: props.classname,\r\n                                    link:props.link\r\n                                }}\r\n                            }} \r\n                            className=\"nav-link\"\r\n                            style={{color: \"black\"}}\r\n                            >\r\n\r\n                        <Card.Body style={{textAlign:\"left\"}}>\r\n                            <Card.Title className=\"card_title\">\r\n                                {props.classname}\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                {props.code} <br/>\r\n                                {props.admin}\r\n                            </Card.Text>\r\n                    </Card.Body>\r\n                </Link>\r\n                        {props.user.role === 'Student' ? renderUnenroll() : null}\r\n                </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Class_Card\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport { UserContext } from '../context/userContext'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport Navbar1 from './Navbar'\r\nimport Class_Card from './ClassCard'\r\nimport {Link, Redirect, useHistory} from 'react-router-dom'\r\nimport { MdCollectionsBookmark } from 'react-icons/md'\r\n\r\nconst HomePage = () => {\r\n    const [classes, setClasses] = useState([]);\r\n    const [user, setUser] = useState({\r\n        _id: '',\r\n        email: '',\r\n        username: '',\r\n        role:''\r\n    });\r\n    const hist = useHistory();\r\n\r\n    const fetchClasses = async () => {\r\n        try{\r\n            const res = await fetch('https://fliprclassroom.herokuapp.com/class', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                    Accept: \"application/json\",\r\n                },\r\n                withCredentials: true, \r\n                credentials: 'include',\r\n            });\r\n            const data = await res.json();\r\n            if(data.error) throw data.error\r\n            return data;\r\n        } catch (err) {\r\n            hist.push('/signup');\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const unenroll = async (id) => {\r\n        try {\r\n            let res = await fetch(`https://fliprclassroom.herokuapp.com/class/unenroll/${id}`, {\r\n                method: 'PATCH',\r\n                headers: {\r\n                    'Content-Type':'application/json',\r\n                    Accept: \"application/json\",\r\n                  },\r\n                withCredentials: true, \r\n                credentials: 'include'\r\n            });\r\n            res = await res.json();\r\n            if (!res.error) {\r\n                setClasses(prev => {\r\n                    return prev.filter(cls => cls._id !== id);\r\n                })\r\n                return;\r\n            }\r\n            throw res.error\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cookies = document.cookie.split(';');\r\n        cookies.forEach(cookie => {\r\n            let cook = decodeURI(cookie);\r\n            cook = cook.split('=').map(c => c.trim());\r\n            if (cook[0] === 'user') {\r\n                const temp = JSON.parse(decodeURIComponent(cook[1]));\r\n                if(temp)\r\n                setUser(() => {\r\n                    return {\r\n                        _id: temp._id,\r\n                        email: temp.email,\r\n                        username: temp.username,\r\n                        role:temp.role\r\n                    }\r\n                });\r\n            }\r\n        })\r\n\r\n        fetchClasses().then(res => {\r\n            if(res && res.classes)\r\n                setClasses(res.classes);\r\n        });\r\n    }, []);\r\n\r\n    const renderEmpty = () => {\r\n        return (\r\n            <div>\r\n                No classes available yet.\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Navbar1/>\r\n         <Container className=\"mt-5\">\r\n             <Row>\r\n                 <Col className=\"mt-3\">\r\n                 <div className=\"d-flex justify-content-center align-items-center flex-wrap\">\r\n                    {classes && classes.length == 0 ? renderEmpty() : null}\r\n                    {classes && classes.map((val,index) => \r\n                        <Class_Card\r\n                            key={index}\r\n                            user={user}\r\n                            id = {val._id}\r\n                            classname = {val.title}\r\n                            ClassCode = {val.subjectCode}\r\n                            link = {val.link}\r\n                            admin={val.admin.name}\r\n                            unenroll = {unenroll}\r\n                        />\r\n                    )\r\n                    }\r\n                 </div>\r\n                 </Col>\r\n             </Row>\r\n         </Container>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React,{ useState, useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { Col, Container, Row,Form,Button, Media, Image, Spinner } from 'react-bootstrap'\r\nimport { MdAccountBox, MdEmail, MdLock } from \"react-icons/md\";\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { UserContext } from '../context/userContext'\r\n\r\nimport Navbar1 from './Navbar';\r\n\r\n\r\nconst SignUp = () => {\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [c_password, setC_Password] = useState('');\r\n    const [role, setRole] = useState('Student');\r\n    \r\n    const [loader, setLoader] = useState(false);\r\n    const [err, setErr] = useState('');\r\n\r\n    const [user, setUser] = useContext(UserContext)\r\n    const hist = useHistory();\r\n\r\n    const onChangeHandler = (e) => {\r\n        switch(e.target.name){\r\n            case \"name\":\r\n                setName(e.target.value)\r\n                break\r\n            case \"email\":\r\n                setEmail(e.target.value)\r\n                break\r\n            case \"password\":\r\n                setPassword(e.target.value)\r\n                break\r\n            case \"c_password\":\r\n                setC_Password(e.target.value)\r\n                break\r\n            case \"role\":\r\n                console.log(e.target.value)\r\n                setRole(e.target.value)\r\n                break      \r\n        }\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        if(!name || !email || !password || !c_password){\r\n            //empty field\r\n            setErr(\"Empty field!\")\r\n        }\r\n        if(password !== c_password){\r\n            //password does not match\r\n            setErr(\"Password does not match!\")\r\n        }else{\r\n            //if password matched\r\n            fetchClassPosts().then(res => {\r\n                if(!res.error){\r\n                    setUser({\r\n                        username: res.user.username,\r\n                        email: res.user.email,\r\n                        role: res.user.role\r\n                    })\r\n                    hist.push('/')\r\n                }else{\r\n                    setErr(res.error || 'Something')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const fetchClassPosts = async () => {\r\n        let res = await fetch(\"https://fliprclassroom.herokuapp.com/auth/signup\", {\r\n            method: 'POST',\r\n            body : JSON.stringify({\r\n                'username' : name,\r\n                'email' : email,\r\n                'password' : password,\r\n                'role' : role,\r\n            }),\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: \"application/json\",\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        });\r\n        res = await res.json();\r\n        return res;\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Navbar1/>\r\n         <Container className=\"p-5 p-md-0\">\r\n             <Row className=\"mt-5 justify-content-center align-content-center\">\r\n                 <Col md=\"12\" xl=\"6\" className=\"mt-5 p-md-5 p-sm-5 mb-5 bg-white align-content-center justify-content-center form_bg\">\r\n                     <h3 className=\"mb-5 mt-4\">Sign Up</h3>\r\n                     <Form className=\"mb-5 \">\r\n                         <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                            <Form.Label column md=\"1\" xs=\"1\"><MdAccountBox style={{fontSize:\"20px\"}}/></Form.Label>\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Form.Control className=\"form_bg1\" name=\"name\" value={name} onChange={onChangeHandler} type=\"text\" placeholder=\"Username\" autoComplete=\"off\"/>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                            <Form.Label column md=\"1\" xs=\"1\"><MdEmail style={{fontSize:\"20px\"}}/></Form.Label>\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Form.Control className=\"form_bg1\" name=\"email\" value={email} onChange={onChangeHandler} type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\"/>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                            <Form.Label column md=\"1\" xs=\"1\"><MdLock style={{fontSize:\"20px\"}}/></Form.Label>\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Form.Control className=\"form_bg1\" name=\"password\" value={password} onChange={onChangeHandler} type=\"password\" placeholder=\"Password\" autoComplete=\"off\"/>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                            <Form.Label column md=\"1\" xs=\"1\"><MdLock style={{fontSize:\"20px\"}}/></Form.Label>\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Form.Control className=\"form_bg1\" name=\"c_password\" value={c_password} onChange={onChangeHandler} type=\"password\" placeholder=\"Confirm Password\" autoComplete=\"off\"/>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                            <Form.Label column md=\"1\" xs=\"1\"><FaChalkboardTeacher style={{fontSize:\"20px\"}}/></Form.Label>\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Form.Control as=\"select\" name=\"role\" onChange={onChangeHandler} className=\"form_bg1\">\r\n                                    <option>Student</option>\r\n                                    <option>Teacher</option>\r\n                                </Form.Control>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <Form.Group as={Row} className=\"mt-4 justify-content-center align-content-center\">\r\n                            <Col md=\"8\" xs=\"10\">\r\n                                <Button onClick={submitHandler} className=\"button\">Create Account</Button>\r\n                            </Col>\r\n                         </Form.Group>\r\n                         <p className=\"mt-3 danger\">{err}</p>\r\n                     </Form>\r\n                     <p><NavLink className=\"nav-link\" to=\"/signin\">Already have an account? Sign in</NavLink></p>\r\n                 </Col>\r\n             </Row>\r\n         </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React,{ useState, useContext } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { Col, Container, Row,Form,Button, Media, Image,Spinner } from 'react-bootstrap'\r\nimport { MdAccountBox, MdEmail, MdLock } from \"react-icons/md\";\r\n\r\nimport { UserContext } from \"../context/userContext\"\r\n\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\n\r\nimport Navbar1 from './Navbar';\r\n\r\nconst Signin = () => {\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [err, setErr] = useState('');\r\n\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const [user, setUser] = useContext(UserContext)\r\n    const hist = useHistory();\r\n\r\n    const onChangeHandler = (e) => {\r\n        switch(e.target.name){\r\n            case \"name\":\r\n                setName(e.target.value)\r\n                break\r\n            case \"email\":\r\n                setEmail(e.target.value)\r\n                break\r\n            case \"password\":\r\n                setPassword(e.target.value)\r\n                break \r\n        }\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        if(!name || !email || !password){\r\n            //empty field\r\n            setErr(\"Empty field!\")\r\n        }else{\r\n            //if password matched\r\n            fetchClassPosts().then(res => {\r\n                console.log(res);\r\n                if(!res.error){\r\n                    setUser({\r\n                        username: res.user.username,\r\n                        email: res.user.email,\r\n                        role: res.user.role\r\n                    });\r\n                    hist.push('/');\r\n                }else{\r\n                    setErr(res.error)\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const fetchClassPosts = async () => {\r\n        let res = await fetch(\"https://fliprclassroom.herokuapp.com/auth/signin\", {\r\n            method: 'POST',\r\n            body : JSON.stringify({\r\n                'email': email,\r\n                'password': password,\r\n            }),\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: \"application/json\",\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include'\r\n        });\r\n        res = await res.json();\r\n        return res;\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Navbar1/>\r\n            <Container className=\"p-5 p-md-0\">\r\n                <Row className=\"mt-5 justify-content-center align-content-center\">\r\n                    <Col sm=\"12\" md=\"9\" xl=\"6\" className=\"mt-5 p-md-5 p-sm-5 mb-5 bg-white align-content-center justify-content-center form_bg\">\r\n                        <h3 className=\"mb-5 mt-4\">Sign In</h3>\r\n                        <Form className=\"mb-5\">\r\n                            <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                                <Form.Label column md=\"1\" xs=\"1\"><MdAccountBox style={{fontSize:\"20px\"}}/></Form.Label>\r\n                                <Col md=\"8\" xs=\"10\">\r\n                                    <Form.Control className=\"form_bg1\" name=\"name\" value={name} onChange={onChangeHandler} type=\"text\" placeholder=\"Username\" autoComplete=\"off\"/>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                                <Form.Label column md=\"1\" xs=\"1\"><MdEmail style={{fontSize:\"20px\"}}/></Form.Label>\r\n                                <Col md=\"8\" xs=\"10\">\r\n                                    <Form.Control className=\"form_bg1\" name=\"email\" value={email} onChange={onChangeHandler} type=\"email\" placeholder=\"Enter email\" autoComplete=\"off\"/>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mb-3 justify-content-center align-content-center\">\r\n                                <Form.Label column md=\"1\" xs=\"1\"><MdLock style={{fontSize:\"20px\"}}/></Form.Label>\r\n                                <Col md=\"8\" xs=\"10\">\r\n                                    <Form.Control className=\"form_bg1\" name=\"password\" value={password} onChange={onChangeHandler} type=\"password\" placeholder=\"Password\" autoComplete=\"off\"/>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} className=\"mt-4 justify-content-center align-content-center\">\r\n                                <Col md=\"8\" xs=\"10\">\r\n                                    <Button onClick={submitHandler} className=\"button\">Log In</Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                            <p>{err}</p>\r\n                        </Form>\r\n                        <NavLink className=\"nav-link\" to=\"/signup\">Don't have an Account? Sign up</NavLink>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, {useState} from 'react'\r\nimport Navbar2 from './Navbar2';\r\nimport { ImCross } from \"react-icons/im\";\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\n\r\nconst CreateAssignment = () => {\r\n    const [form, setForm] = useState([]);\r\n    const [dealine,setDeadline] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [err, setErr] = useState('');\r\n    const hist = useHistory();\r\n\r\n    const params = useParams();\r\n\r\n    const submitHandler = () => {\r\n\r\n        let Question = [];\r\n\r\n        form.forEach(ele=>{\r\n            let tempQuestion = {\r\n                question: ele.Question,\r\n                options: [ele.Option1, ele.Option2, ele.Option3, ele.Option4],\r\n                correct: ele.Correct,\r\n                points: ele.Points\r\n            }\r\n            Question.push(tempQuestion)\r\n        })\r\n\r\n        let sendQuestionData = {\r\n            title: title,\r\n            questions: Question,\r\n            due: dealine,\r\n        }\r\n\r\n        console.log(sendQuestionData, params)\r\n\r\n        if(!sendQuestionData.due || !sendQuestionData.title || !sendQuestionData.questions ){\r\n            //empty field\r\n            setErr(\"Empty field!\")\r\n        }\r\n        else{\r\n            fetchClassPosts(sendQuestionData).then(res => {\r\n                if(!res.error){\r\n                    hist.push(`/class/${params.id}/classwork`);\r\n                }else{\r\n                    // setErr(res.error || 'Something')\r\n                    console.log(res.error)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const fetchClassPosts = async (sendQuestionData) => {\r\n        let res = await fetch(`https://fliprclassroom.herokuapp.com/class/${params.id}/assign`, {\r\n            method: 'POST',\r\n            body : JSON.stringify(sendQuestionData),\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Accept: \"application/json\",\r\n            },\r\n            withCredentials: true,\r\n            credentials: 'include',\r\n        });\r\n        res = await res.json();\r\n        return res;\r\n    };\r\n\r\n    const prevIsValid = () => {\r\n        if (form.length === 0) {\r\n        return true;\r\n        }\r\n\r\n        const someEmpty = form.some(\r\n        (item) => item.Correct === \"\" || item.Correct === \"Select the Correct Option\" ||item.Option1 === \"\" ||item.Option2 === \"\" ||item.Option3 === \"\" ||item.Option4 === \"\" || item.Question === \"\"|| item.Points === \"\"\r\n        );\r\n\r\n        if (someEmpty) {\r\n        form.map((item, index) => {\r\n            const allPrev = [...form];\r\n\r\n            if (form[index].Points === \"\") {\r\n            allPrev[index].errors.Points = \"Points is required\";\r\n            }\r\n\r\n            if (form[index].Question === \"\") {\r\n            allPrev[index].errors.Question = \"Question is required\";\r\n            }\r\n\r\n            if (form[index].Option1 === \"\") {\r\n            allPrev[index].errors.Option1 = \"Option1 is required\";\r\n            }\r\n\r\n            if (form[index].Option2 === \"\") {\r\n            allPrev[index].errors.Option2 = \"Option2 is required\";\r\n            }\r\n            if (form[index].Option3 === \"\") {\r\n            allPrev[index].errors.Option3 = \"Option3 is required\";\r\n            }\r\n            if (form[index].Option4 === \"\") {\r\n            allPrev[index].errors.Option4 = \"Option4 is required\";\r\n            }\r\n            if (form[index].Correct === \"\") {\r\n            allPrev[index].errors.Correct = \"Correct Option is required\";\r\n            }\r\n            if (form[index].Correct === \"Select the Correct Option\") {\r\n            allPrev[index].errors.Correct = \"Correct Option is required\";\r\n            }\r\n            setForm(allPrev);\r\n        });\r\n        }\r\n\r\n        return !someEmpty;\r\n    };\r\n\r\n    const handleAddLink = (e) => {\r\n        e.preventDefault();\r\n        const inputState = {\r\n        Points: \"\",\r\n        Question: \"\",\r\n        Option1: \"\",\r\n        Option2: \"\",\r\n        Option3: \"\",\r\n        Option4: \"\",\r\n        Correct:\"\",\r\n\r\n        errors: {\r\n            Points: null,\r\n            Question: null,\r\n            Option1: null,\r\n            Option2: null,\r\n            Option3: null,\r\n            Option4: null,\r\n            Correct: null,\r\n        },\r\n        };\r\n\r\n        if (prevIsValid()) {\r\n        setForm((prev) => [...prev, inputState]);\r\n        }\r\n    };\r\n\r\n    const onChange = (index, event) => {\r\n        event.preventDefault();\r\n        event.persist();\r\n\r\n        setForm((prev) => {\r\n        return prev.map((item, i) => {\r\n            if (i !== index) {\r\n            return item;\r\n            }\r\n\r\n            return {\r\n            ...item,\r\n            [event.target.name]: event.target.value,\r\n\r\n            errors: {\r\n                ...item.errors,\r\n                [event.target.name]:\r\n                event.target.value.length > 0\r\n                    ? null\r\n                    : [event.target.name] + \" Is required\",\r\n            },\r\n            };\r\n        });\r\n        });\r\n    };\r\n\r\n    const handleRemoveField = (e, index) => {\r\n        e.preventDefault();\r\n\r\n        setForm((prev) => prev.filter((item) => item !== prev[index]));\r\n    };\r\n    return (\r\n        <>\r\n            {/* <Navbar2/> */}\r\n            <div className=\"p-5\">\r\n                <div className=\"container col-12 col-md-9 mt-5 p-5 bg-white form_bg\">\r\n                    <h3>Create the Assignment</h3>\r\n                    {/* {JSON.stringify(form)} */}\r\n                    <form>\r\n                        \r\n                        <div className=\"row justify-content-center align-content-center mb-3\">\r\n                            <div className=\"col-md-5\"> \r\n                                <input type=\"text\" placeholder=\"Title\" className=\"form_bg mt-4\" onChange={(e)=>setTitle(e.target.value)} name=\"title\" value={title} style={{outline: \"none\", padding: \"8px\", borderRadius: \"20px\"}}></input>\r\n                            </div>\r\n                        </div>\r\n                        {form.map((item, index) => (\r\n                            <div className=\"row mt-3\" key={`item-${index}`}>\r\n                                <button\r\n                                        className=\"offset-10 col-1 mb-3 btn\"\r\n                                        onClick={(e) => handleRemoveField(e, index)}\r\n                                        style={{textAlign:\"right\"}}\r\n                                    >\r\n                                    <ImCross />\r\n                                </button>\r\n                                <div className=\"row justify-content-center align-content-center mb-3\">\r\n                                    <div className=\"col-12 col-md-5\">\r\n                                        <input\r\n                                        type=\"number\"\r\n                                        className={\r\n                                            item.errors.Points\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Points\"\r\n                                        placeholder=\"Points\"\r\n                                        value={item.Points}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n\r\n                                        {item.errors.Points && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Points}</div>\r\n                                        )}\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row justify-content-center align-content-center mb-3\">\r\n                                    <div className=\"col-md-10\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Question\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Question\"\r\n                                        placeholder=\"Question\"\r\n                                        value={item.Question}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n                        \r\n                                        {item.errors.Question && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Question}</div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center align-content-center mb-md-3\">\r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Option1\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Option1\"\r\n                                        placeholder=\"Option1\"\r\n                                        value={item.Option1}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n                        \r\n                                        {item.errors.Option1 && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Option1}</div>\r\n                                        )}\r\n                                    </div>\r\n                                \r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Option2\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Option2\"\r\n                                        placeholder=\"Option2\"\r\n                                        value={item.Option2}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n                        \r\n                                        {item.errors.Option2 && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Option2}</div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center align-content-center mb-md-3\">\r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Option3\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Option3\"\r\n                                        placeholder=\"Option3\"\r\n                                        value={item.Option3}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n                        \r\n                                        {item.errors.Option3 && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Option3}</div>\r\n                                        )}\r\n                                    </div>\r\n                                \r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Option4\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Option4\"\r\n                                        placeholder=\"Option4\"\r\n                                        value={item.Option4}\r\n                                        onChange={(e) => onChange(index, e)}\r\n                                        />\r\n                        \r\n                                        {item.errors.Option4 && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Option4}</div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center align-content-center mb-3\">\r\n                                    <div className=\"col-12 col-md-5 p-2\">                            \r\n                                        <select name=\"Correct\" value={item.Correct} onChange={(e)=> onChange(index,e)} className={\r\n                                                item.errors.Correct\r\n                                                ? \"form-control  is-invalid form_bg custom-select\"\r\n                                                : \"form-control form_bg custom-select\"\r\n                                            }>\r\n                                            <option value={Option}>Select the Correct Option</option>\r\n                                            <option value={item.Option1}>{item.Option1}</option>\r\n                                            <option value={item.Option2}>{item.Option2}</option>\r\n                                            <option value={item.Option3}>{item.Option3}</option>\r\n                                            <option value={item.Option4}>{item.Option4}</option>\r\n                                        </select>\r\n                                        {item.errors.Correct && (\r\n                                        <div className=\"invalid-feedback\">{item.errors.Correct}</div>\r\n                                        )}\r\n                                    </div>\r\n                                        {/* <input\r\n                                        type=\"text\"\r\n                                        className={\r\n                                            item.errors.Correct\r\n                                            ? \"form-control  is-invalid form_bg\"\r\n                                            : \"form-control form_bg\"\r\n                                        }\r\n                                        name=\"Correct\"\r\n                                        placeholder=\"Correct Answer\"\r\n                                        value={item.Correct}\r\n                                        onChange={(e) => onChange(index,e)}\r\n                                        /> */}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                \r\n                        <button className=\"btn btn-outline-dark mt-2 form_bg\" onClick={handleAddLink}>\r\n                            Add another question\r\n                        </button>\r\n                    </form>\r\n                    <div className=\"row justify-content-center align-content-center mb-3 mt-3\">\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <input\r\n                            type=\"date\"\r\n                            className={\"form-control form_bg\"}\r\n                            name=\"Deadline\"\r\n                            placeholder=\"Deadline\"\r\n                            value={dealine}\r\n                            onChange={(e) => setDeadline(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={submitHandler} className=\"btn btn-outline-success mt-2 form_bg\">\r\n                        Post the Assignment\r\n                    </button>\r\n                    <p className=\"mt-3 danger\">{err}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateAssignment\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Navbar2 from './Navbar2'\r\nimport { Container, Row, Col, ListGroup, Button } from 'react-bootstrap'\r\nimport { MdAssignment, MdAssignmentInd,MdCreateNewFolder } from \"react-icons/md\";\r\n\r\nconst SubmitAssignment = () => {\r\n    const [answer, setAnswer] = useState([]);\r\n    const params = useParams();\r\n    const [questions, setQuestions] = useState([]) \r\n    const [assign, setAssign] = useState({\r\n            title: '',\r\n            submissions: [],\r\n    });\r\n    const [user, setUser] = useState({\r\n        _id: '',\r\n        email: '',\r\n        username: '',\r\n        role:''\r\n    });\r\n\r\n    const [err, setErr] = useState('')\r\n\r\n    const hist = useHistory();\r\n\r\n    const onChange = (index, event) => {\r\n        // event.preventDefault();\r\n        event.persist();\r\n        console.log(answer)\r\n        setAnswer(\r\n            {...answer,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    useEffect(()=>{\r\n\r\n        const cookies = document.cookie.split(';');\r\n        cookies.forEach(cookie => {\r\n            let cook = decodeURI(cookie);\r\n            cook = cook.split('=').map(c => c.trim());\r\n            if (cook[0] === 'user') {\r\n                const temp = JSON.parse(decodeURIComponent(cook[1]));\r\n                if(temp)\r\n                setUser(() => {\r\n                    return {\r\n                        _id: temp._id,\r\n                        email: temp.email,\r\n                        username: temp.username,\r\n                        role:temp.role\r\n                    }\r\n                });\r\n            }\r\n        })\r\n        \r\n        const fetchAssigns = async () => {\r\n            try{\r\n                let res = await fetch(`https://fliprclassroom.herokuapp.com/assign/${params.id}`, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type':'application/json',\r\n                        Accept: \"application/json\",\r\n                    },\r\n                    withCredentials: true, \r\n                    credentials: 'include',\r\n                });\r\n                res = await res.json();\r\n                return res;\r\n            }\r\n            catch(err){\r\n                console.log(err)\r\n            }\r\n        };\r\n\r\n        fetchAssigns().then(res=>{\r\n            if(res){\r\n                console.log(res.assign.questions)\r\n                setAssign(()=>{\r\n                    return {\r\n                        title: res.assign.title,\r\n                        submissions: res.assign.submissions\r\n                    }\r\n                })\r\n                setQuestions(res.assign.questions)\r\n            }else{\r\n                console.log(\"no resukt\")\r\n                setErr(\"No result\")\r\n            }\r\n        });\r\n\r\n    }, [])\r\n\r\n    const submitHandler = async () => {\r\n        console.log(answer)\r\n        try{\r\n            let res = await fetch(`https://fliprclassroom.herokuapp.com/assign/${params.id}/submit`, {\r\n                    method: 'PATCH',\r\n                    headers : { \r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(answer),\r\n                    withCredentials: true, \r\n                    credentials: 'include'\r\n                })\r\n            console.log(JSON.stringify(answer))\r\n            \r\n            console.log(res)\r\n\r\n            res = await res.json();\r\n\r\n\r\n            if(!res.error){\r\n                hist.push(\"/\")\r\n            }else{\r\n                throw res.error;\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            // setErr(err)\r\n        }\r\n    }\r\n\r\n\r\n    if(user.role === \"Student\"){\r\n        return (\r\n            <>\r\n               \r\n                <div className=\"p-5\">\r\n                    <div className=\"container col-12 col-md-9 mt-5 p-5 bg-white form_bg\">\r\n                        <h3>Solve the Assignment</h3>\r\n                        <form>\r\n                            {questions.map((question, index)=>{\r\n                             return <form key={index}>\r\n                                <div className=\"row justify-content-center align-content-center mb-3 mt-5\">\r\n                                    <div className=\"col-md-10\">\r\n                                        <p>{question.question}</p>\r\n                                        <p>{question.points}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center align-content-center mb-md-3\">\r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input type=\"radio\" id=\"customRadio1\" name={question._id} value={question.options[0]} onChange={(e)=> onChange(index,e)} className=\"custom-control-input m-3\" />\r\n                                        <label className=\"custom-control-label\" for=\"customRadio1\">{question.options[0]}</label>\r\n                                    </div>\r\n    \r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input type=\"radio\" id=\"customRadio2\" name={question._id} value={question.options[1]} onChange={(e)=> onChange(index,e)} className=\"custom-control-input m-3\" />\r\n                                        <label className=\"custom-control-label\" for=\"customRadio1\">{question.options[1]}</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center align-content-center mb-md-3\">\r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input type=\"radio\" id=\"customRadio3\" name={question._id} value={question.options[2]} onChange={(e)=> onChange(index,e)} className=\"custom-control-input m-3\" />\r\n                                        <label className=\"custom-control-label\" for=\"customRadio1\">{question.options[2]}</label>\r\n                                    </div>\r\n    \r\n                                    <div className=\"col-12 col-md-5 mb-3 mb-md-0\">\r\n                                        <input type=\"radio\" id=\"customRadio4\" name={question._id} value={question.options[3]} onChange={(e)=> onChange(index,e)} className=\"custom-control-input m-3\" />\r\n                                        <label className=\"custom-control-label\" for=\"customRadio1\">{question.options[3]}</label>\r\n                                    </div>\r\n                                </div>\r\n                                </ form>\r\n                            })}\r\n                        </form>\r\n                        <button onClick={submitHandler} className=\"col-md-2 btn btn-outline-success mt-2 form_bg\">\r\n                            Submit\r\n                        </button>\r\n                        <p className=\"mt-3 danger\">{err}</p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n        \r\n    }else{\r\n        return (\r\n            <>\r\n               \r\n                <div className=\"p-5\">\r\n                    <div className=\"container col-12 col-md-9 mt-5 p-5 bg-white form_bg\">\r\n                        <h3>{assign.title}</h3>\r\n                        {console.log(questions)}\r\n                        <div className=\"row justify-content-center align-items-center\">\r\n                        {assign.submissions.length === 0 ? <p>No submissions yet</p> : null}\r\n                        <ListGroup variant=\"flush\"  className=\"mt-5 col-md-7\">\r\n                            {assign.submissions.map((ass, index) =>\r\n                                <ListGroup.Item>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <div><MdAssignment style={{fontSize:\"20px\", marginRight:\"10px\"}}/> {ass.user}</div>\r\n                                        <div>{ass.points}</div>\r\n                                        <div>{(ass.time.split(\"T\")[0])}</div>\r\n                                    </div>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SubmitAssignment\r\n","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// ---------Components----------------\r\nimport A_Class from './components/AClass';\r\nimport Classwork from './components/Classwork';\r\nimport Members from './components/Members';\r\nimport HomePage from './components/HomePage';\r\nimport SignUp from './components/SignUp';\r\nimport Signin from './components/Signin';\r\nimport CreateAssignment from './components/CreateAssignment';\r\nimport SubmitAssignment from './components/SubmitAssignment';\r\n\r\n// ----------Routers-------------\r\nimport { Switch,Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n          <Route exact path=\"/signup\">\r\n            <SignUp />\r\n          </Route>\r\n          <Route exact path=\"/signin\">\r\n            <Signin />\r\n          </Route>\r\n          <Route exact path=\"/class/:id/stream\">\r\n            <A_Class />\r\n          </Route>\r\n          <Route exact path=\"/class/:id/classwork\">\r\n            <Classwork />\r\n          </Route>\r\n          <Route exact path=\"/class/:id/people\">\r\n              <Members />\r\n          </Route>\r\n          <Route exact path=\"/class/:id/assign/create\">\r\n              <CreateAssignment />\r\n          </Route>\r\n          <Route exact path=\"/assign/:id/submit\">\r\n              <SubmitAssignment />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { UserProvider } from './context/userContext'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <UserProvider>\r\n      <BrowserRouter basename={window.location.pathname || \"\"}> \r\n        <App />\r\n      </BrowserRouter>\r\n    </UserProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}